name: Build, Scan, and Publish Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-scan-publish:
    runs-on: ubuntu-latest

    steps:
    # Étape 1 : Checkout du code source
    - name: Checkout code
      uses: actions/checkout@v3

    # Étape 2 : Connexion au registre GitHub Container Registry (GHCR)
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Étape 3 : Construction de l'image Docker
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        push: false # On ne publie pas encore
        tags: ghcr.io/${{ github.repository }}:latest

        # Étape pour ajouter un cache Trivy
    - name: Cache Trivy database
      uses: actions/cache@v4
      with:
        path: ~/.cache/trivy
        key: cache-trivy-${{ runner.os }}-${{ github.run_id }}
        restore-keys: |
          cache-trivy-${{ runner.os }}-
        token: ${{ secrets.PAT_TOKEN }}
    
    - name: Scan Docker image for vulnerabilities
    uses: aquasecurity/trivy-action@0.28.0
    with:
      image-ref: ghcr.io/${{ github.repository }}:latest
      format: table
      severity: HIGH,CRITICAL
      args: --db-repository docker.io/aquasec/trivy-db




    # Étape 5 : Publication de l'image Docker (si le scan passe)
    - name: Push Docker image
      if: success() # Ne publie que si le scan réussit
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ghcr.io/${{ github.repository }}:latest
